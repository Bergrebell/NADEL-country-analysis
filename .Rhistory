1+1
demo()
caschool <- read.csv("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/caschool.csv")
View(caschool)
caschool
summary(caschool)
summary(caschool)
summary(caschool)
summary(testscr)
attach(caschool)
summary(testscr)
summary(str)
hist(str)
scatter.smooth(x=teachers, y=testscr, main="Dist ~ Speed")
scatter.smooth(x=testscr, y=teachers, main="Dist ~ Speed")
scatter.smooth(x=teachers, y=testscr, main="Dist ~ Speed")
mean(str)
var(str)
stderr(str)
sd(str)
median(str)
scatter.smooth(x=teachers, y=testscr, main="testscr ~ teachers")
scatter.smooth(x=teachers, y=testscr, main="testscore ~ teachers")
scatter.smooth(x=teachers, y=str, main="testscore ~ teachers")
scatter.smooth(x=str, y=testscr, main="testscore ~ teachers")
scatter.smooth(x=str, y=testscr, main="plot")
#Ex4
cor(str, testscr)
#Ex4
cor(testscr, str)
cor(str, testscr)
small = caschool[testscr < 20]
mean(small)
small
View(small)
View(small)
small = as.numeric(str < 20)
table(small)
large = as.numeric(str > 20)
table(large)
mean_small=mean(testscr[small==1])
mean_large=mean(testscr[large==1])
mean_small
#Ex6 Hypothesis testing: T-Test
t.test(testscr~str)
#Ex6 Hypothesis testing: T-Test
t.test(testscr, str)
#Ex6 Hypothesis testing: T-Test
t.test(testscr ~ small)
table(small)
table(large)
large = as.numeric(str >= 20)
table(small)
table(large)
#Ex6 Hypothesis testing: T-Test
t.test(testscr ~ small)
t.test(testscr ~ large)
t.test(testscr ~ large, data = caschool)
t.test(testscr ~ large, data = caschool)
t.test(testscr ~ large, data = data)
t.test(testscr ~ large, data = caschool)
t.test(testscr ~ large)
source('~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/VL2.R')
# Ex1
caschool <- read.csv("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/caschool.csv")
attach(caschool)
summary(testscr)
hist(str)
#Ex2
mean(str)
median(str)
var(str)
sd(str)
#Ex3
scatter.smooth(x=str, y=testscr, main="plot")
#Ex4
cor(testscr, str)
#Ex5
small = as.numeric(str < 20)
large = as.numeric(str >= 20)
table(small)
table(large)
mean_small=mean(testscr[small==1])
mean_large=mean(testscr[large==1])
mean_small
mean_large
#Ex6 Hypothesis testing: T-Test
t.test(testscr ~ small)
t.test(testscr ~ large)
# Ex1
caschool <- read.csv("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/caschool.csv")
attach(caschool)
summary(testscr)
hist(str)
#Ex2
mean(str)
median(str)
var(str)
sd(str)
#Ex3
scatter.smooth(x=str, y=testscr, main="plot")
#Ex4
cor(testscr, str)
#Ex5
small = as.numeric(str < 20)
large = as.numeric(str >= 20)
table(small)
table(large)
mean_small=mean(testscr[small==1])
mean_large=mean(testscr[large==1])
mean_small
mean_large
#Ex6 Hypothesis testing: T-Test
t.test(testscr ~ small)
t.test(testscr ~ large)
model = lm(testscr ~ str)
summary(model)
plot(str, testscr)
abline(model)
abline(model, lwd=3)
abline(model, col=3)
abline(model)
confint(model, level=0.95)
confint(model, level=0.95)
caschool <- read.csv("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/caschool.csv")
attach(caschool)
model=lm(testscr~str+el_pct)
summary(model)
small = as.numeric(str < 20)
model2 = lm(testscr ~ small)
summary(model2)
small = as.numeric(str < 20)
View(caschool)
View(caschool)
large = as.numeric(str > 20)
model3 = lm(testscr ~ large)
summary(model3)
diff=mean(testscr[small==1])-mean(testscr[small==0])
mean(diff)
mean(testscr[small==1])
mean(testscr[small==0])
plot(model3)
plot(model3)
plot(large)
plot(large, testscr)
View(caschool)
summary(el_pct)
hist(el_pct)
hist(small)
plot(large, testscr)
cor(str, el_pct)
model4 = lm(testscr ~ large + el_pct)
plot(model4)
summary(model4)
model4 = lm(testscr ~ str + el_pct)
summary(model4)
summary(model4)
require(ggplot2)
ggplot2(model4)
ggplot(model4)
require(ggplot2)
ggplot(model4)
ggplot(model3)
summary(model4)
summary(model4)
model5 = lm(str ~ el_pct)
summary(model5)
plot(model5)
plot(str, el_pct)
abline(model5)
plot(el_pct, str)
abline(model5)
par(mfrow=c(2,2)) # init 4 charts in 1 panel
plot(model5)
########
#Exercises Linear Regression II
model6 = lm(testscr~str+el_pct+expn_stu)
summary(model6)
### Polynominal functions
avginc2<-avginc^2
### Polynominal functions
avginc^2
View(caschool)
caschool <- read.csv("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Workspace/caschool.csv")
attach(caschool)
### Polynominal functions
avginc2 <- avginc^2
model7 = lm(testscr~str+avginc+avginc2)
plot(testscr,avginc)
plot(avginc, testscr)
abline(model7)
plot(model7)
plot(testscr,model7)
plot(testscr,predict(model7))
lines(testscr,predict(model7))
lines(testscr,model7)
plot(testscr,model7)
library(readr)
Tanzani <- read_csv("Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Country Analysis/Tanzani.csv")
View(Tanzani)
getwd()
View(Tanzani)
knitr::opts_chunk$set(echo = TRUE)
library(readr)
dataset <- read_csv("Tanzani.csv")
attach(dataset)
summary(year)
knitr::opts_chunk$set(echo = TRUE)
# import and attach Tanzania dataset
library(readr)
dataset <- read_csv("Tanzani.csv")
attach(dataset)
summary(year)
View(dataset)
plot(year)
describe(year)
install.packages("describedata")
describe(year)
describe(dataset)
summary(year)
knitr::opts_chunk$set(echo = TRUE)
# import and attach Tanzania dataset
library(readr)
dataset <- read_csv("Tanzani.csv")
attach(dataset)
describe(year)
summary(year)
install.packages("Hmisc")
describe(year)
# inspect data - source: https://www.littlemissdata.com/blog/inspectdf
library(devtools)
library(inspectdf)
library(tidyverse)
t05 <- subset(tanzania, year==2005)
t10 <- subset(tanzania, year==2010)
t15 <- subset(tanzania, year==2015)
# read and attach Tanzania dataset
tanzania <- read_csv("Tanzani.csv")
setwd("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Country Analysis")
# set console lang & wd
Sys.setenv(LANG = "en")
setwd("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Country Analysis")
t05 <- subset(tanzania, year==2005)
# read and attach Tanzania dataset
tanzania <- read_csv("Tanzani.csv")
# read and attach Tanzania dataset
tanzania <- read_csv("Tanzani.csv")
attach(tanzania)
t05 <- subset(tanzania, year==2005)
t10 <- subset(tanzania, year==2010)
t15 <- subset(tanzania, year==2015)
inspect_types(t05$Y_his, t15$Y_his, show_plot = TRUE)
inspect_types(c(t05$Y_his), show_plot = TRUE)
inspect_types(t05, show_plot = TRUE)
inspect_types(t05)
inspect_types(t05, show_plot = TRUE)
test <- c(t05$year, t05$Y_his)
sub05 <- select(t05, 'year')
source('~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Country Analysis/CorrPlotEx.R')
# set console lang & wd
Sys.setenv(LANG = "en")
setwd("~/Dropbox (Personal)/NADEL ETHZ/Policy Evaluation and Applied Statistics/Country Analysis")
# import packages
library(corrplot)
# read and attach Tanzania dataset
tanzania <- read_csv("Tanzani.csv")
attach(tanzania)
# check for correlations
corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
# import packages
library(corrgram)
library(corrplot)
# check for correlations
corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
# check for correlations
corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), method="pie")
corrplot(corrgram(t05), method="pie", order = "hclust", addrect = 2)
# check for correlations
# corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), method="pie", order = "hclust", addrect = 2)
# check for correlations
# corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), method="pie", order = "FPC")
# check for correlations
corrplot(corrgram(t05), method="pie", type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
# check for correlations
corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(t05, type="pie")
corrplot(t05, type="upper")
# check for correlations
corrplot(corrgram(t05), type = "upper", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), type = "pie", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), type = "full", order = "hclust", tl.col = "black", tl.srt = 45)
corrplot(corrgram(t05), type = "full")
View(t05)
# clean NA values
tanzaniaNA <- na.omit(tanzania)
View(tanzaniaNA)
inspect_types(t05, show_plot = TRUE)
# clean NA values
tanzaniaNA <- na.omit(tanzania)
# clean NA values
tanzaniaNA <- na.omit(t05)
# clean NA values
tanzaniaNA005 <- na.omit(t05)
# clean NA values
tanzaniaNA05 <- na.omit(t05)
View(tanzaniaNA05)
inspect_types(t05, show_plot = TRUE)
inspect_types(t05, show_plot = TRUE))
inspect_types(t05, show_plot = TRUE)
show_plot(t05)
t05 <- subset(tanzania, year==2005)
show_plot(t05)
show_plot(t05$stunting)
x <- inspect_cat(t05)
show_plot(x)
View(x)
cat05 <- inspect_cat(t05)
show_plot(cat05)
x <- inspect_imb(t05)
show_plot(x)
cat05 <- inspect_cat(t05)
show_plot(cat05)
distinct(tanzania$year)
xNum <- inspect_num(t05)
show_plot(xNum)
xCor <- inspect_cor(t05)
show_plot(xCor)
cat05 <- inspect_cat(t05)
show_plot(cat05)
View(t05)
model_dead5 = lm(dead5~log_y)
summary(model_dead5)
rob_se <- list(sqrt(diag(vcovHC(model_dead5, type = "HC1"))))
rob_se <- list(sqrt(diag(vcovHC(model_dead5, type = "HC1"))))
install.packages("sandwich")
rob_se <- list(sqrt(diag(vcovHC(model_dead5, type = "HC1"))))
rob_se <- list(sqrt(diag(vcovHC(model_dead5, type = "HC1"))))
